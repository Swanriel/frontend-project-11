import*as y from"yup";import E from"on-change";import L from"axios";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function r(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function a(t){if(t.ep)return;t.ep=!0;const n=r(t);fetch(t.href,n)}})();var u=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function P(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var q=typeof u=="object"&&u&&u.Object===Object&&u,C=q,I=C,x=typeof self=="object"&&self&&self.Object===Object&&self,A=I||x||Function("return this")(),M=A,R=M,D=R.Symbol,g=D;function F(e,o){for(var r=-1,a=e==null?0:e.length,t=Array(a);++r<a;)t[r]=o(e[r],r,e);return t}var G=F,N=Array.isArray,k=N,S=g,O=Object.prototype,U=O.hasOwnProperty,B=O.toString,d=S?S.toStringTag:void 0;function H(e){var o=U.call(e,d),r=e[d];try{e[d]=void 0;var a=!0}catch{}var t=B.call(e);return a&&(o?e[d]=r:delete e[d]),t}var K=H,Y=Object.prototype,z=Y.toString;function J(e){return z.call(e)}var Q=J,v=g,V=K,W=Q,X="[object Null]",Z="[object Undefined]",h=v?v.toStringTag:void 0;function ee(e){return e==null?e===void 0?Z:X:h&&h in Object(e)?V(e):W(e)}var te=ee;function re(e){return e!=null&&typeof e=="object"}var oe=re,ne=te,se=oe,ie="[object Symbol]";function ae(e){return typeof e=="symbol"||se(e)&&ne(e)==ie}var ce=ae,T=g,le=G,de=k,fe=ce,ue=1/0,j=T?T.prototype:void 0,w=j?j.toString:void 0;function $(e){if(typeof e=="string")return e;if(de(e))return le(e,$)+"";if(fe(e))return w?w.call(e):"";var o=e+"";return o=="0"&&1/e==-ue?"-0":o}var pe=$,me=pe;function ge(e){return e==null?"":me(e)}var be=ge,ye=be,Se=0;function ve(e){var o=++Se;return ye(e)+o}var he=ve;const Te=P(he),je=(e,o,r)=>E(e,t=>{if(t==="form.error"){r.classList.toggle("is-invalid",!!e.form.error);const n=r.nextElementSibling;n&&(n.textContent=e.form.error||"")}t==="form.process"&&e.form.process==="success"&&(o.reset(),r.focus(),r.classList.remove("is-invalid"))}),we=e=>y.object().shape({url:y.string().required("URL is required").url("Must be a valid URL").notOneOf(e,"RSS already exists")}),Oe=()=>{const e={form:{process:"filling",error:null,valid:!0},feeds:[],posts:[],ui:{viewedPostIds:new Set}},o={formEl:document.getElementById("rss-form"),inputEl:document.getElementById("url-input"),feedbackEl:document.querySelector(".invalid-feedback"),feedsContainer:document.getElementById("feeds-container")},r=je(e,o.formEl,o.inputEl),a=s=>{o.feedsContainer.innerHTML=s.map(c=>`
      <div class="card mb-3">
        <div class="card-body">
          <h5 class="card-title">${c.title}</h5>
          <p class="card-text">${c.description}</p>
        </div>
      </div>
    `).join("")},t=s=>{const c=s.map(i=>`
      <a href="${i.link}" 
         class="list-group-item list-group-item-action"
         target="_blank"
         data-id="${i.id}">
        ${i.title}
      </a>
    `).join("");o.feedsContainer.innerHTML+=`
      <div class="mt-4">
        <h2>Posts</h2>
        <div class="list-group">${c}</div>
      </div>
    `},n=s=>{const i=new DOMParser().parseFromString(s,"text/xml");if(i.querySelector("parsererror"))throw new Error("Invalid RSS format");const f=i.querySelector("channel > title").textContent,p=i.querySelector("channel > description").textContent,m=i.querySelectorAll("item"),_=Array.from(m).map(b=>({id:Te(),title:b.querySelector("title").textContent,link:b.querySelector("link").textContent}));return{feed:{title:f,description:p},posts:_}};o.formEl.addEventListener("submit",async s=>{s.preventDefault();const i=new FormData(s.target).get("url").trim();try{await we(r.feeds).validate({url:i}),r.form.process="sending";const l=`https://allorigins.hexlet.app/get?url=${encodeURIComponent(i)}&disableCache=true`,f=await L.get(l);if(!f.data.contents)throw new Error("Network error");const{feed:p,posts:m}=n(f.data.contents);r.feeds.push(p),r.posts.push(...m),r.form.process="success",a(r.feeds),t(r.posts)}catch(l){console.error(l),r.form.error=l.message,r.form.process="error"}})};Oe();
