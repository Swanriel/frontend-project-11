{
  "version": 3,
  "sources": ["../../on-change/lib/constants.js", "../../on-change/lib/is-builtin.js", "../../on-change/lib/is-array.js", "../../on-change/lib/is-symbol.js", "../../on-change/lib/path.js", "../../on-change/lib/is-iterator.js", "../../on-change/lib/wrap-iterator.js", "../../on-change/lib/ignore-property.js", "../../on-change/lib/cache.js", "../../on-change/lib/is-object.js", "../../on-change/lib/smart-clone.js", "../../on-change/index.js"],
  "sourcesContent": ["module.exports = {\n\tPATH_SEPARATOR: '.',\n\tTARGET: Symbol('target'),\n\tUNSUBSCRIBE: Symbol('unsubscribe')\n};\n", "'use strict';\n\nconst isBuiltin = {\n\twithMutableMethods: value => {\n\t\treturn value instanceof Date ||\n\t\t\tvalue instanceof Set ||\n\t\t\tvalue instanceof Map ||\n\t\t\tvalue instanceof WeakSet ||\n\t\t\tvalue instanceof WeakMap;\n\t},\n\twithoutMutableMethods: value => (typeof value === 'object' ? value === null : typeof value !== 'function') || value instanceof RegExp\n};\n\nmodule.exports = isBuiltin;\n", "'use strict';\n\nmodule.exports = Array.isArray;\n", "'use strict';\n\nmodule.exports = value => typeof value === 'symbol';\n", "'use strict';\n\nconst {PATH_SEPARATOR} = require('./constants');\nconst isArray = require('./is-array');\nconst isSymbol = require('./is-symbol');\n\nmodule.exports = {\n\tafter: (path, subPath) => {\n\t\tif (isArray(path)) {\n\t\t\treturn path.slice(subPath.length);\n\t\t}\n\n\t\tif (subPath === '') {\n\t\t\treturn path;\n\t\t}\n\n\t\treturn path.slice(subPath.length + 1);\n\t},\n\tconcat: (path, key) => {\n\t\tif (isArray(path)) {\n\t\t\tpath = path.slice();\n\n\t\t\tif (key) {\n\t\t\t\tpath.push(key);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\tif (key && key.toString !== undefined) {\n\t\t\tif (path !== '') {\n\t\t\t\tpath += PATH_SEPARATOR;\n\t\t\t}\n\n\t\t\tif (isSymbol(key)) {\n\t\t\t\treturn path + key.toString();\n\t\t\t}\n\n\t\t\treturn path + key;\n\t\t}\n\n\t\treturn path;\n\t},\n\tinitial: path => {\n\t\tif (isArray(path)) {\n\t\t\treturn path.slice(0, -1);\n\t\t}\n\n\t\tif (path === '') {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst index = path.lastIndexOf(PATH_SEPARATOR);\n\n\t\tif (index === -1) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn path.slice(0, index);\n\t},\n\tlast: path => {\n\t\tif (isArray(path)) {\n\t\t\treturn path[path.length - 1] || '';\n\t\t}\n\n\t\tif (path === '') {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst index = path.lastIndexOf(PATH_SEPARATOR);\n\n\t\tif (index === -1) {\n\t\t\treturn path;\n\t\t}\n\n\t\treturn path.slice(index + 1);\n\t},\n\twalk: (path, callback) => {\n\t\tif (isArray(path)) {\n\t\t\tpath.forEach(key => callback(key));\n\t\t} else if (path !== '') {\n\t\t\tlet position = 0;\n\t\t\tlet index = path.indexOf(PATH_SEPARATOR);\n\n\t\t\tif (index === -1) {\n\t\t\t\tcallback(path);\n\t\t\t} else {\n\t\t\t\twhile (position < path.length) {\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tindex = path.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(path.slice(position, index));\n\n\t\t\t\t\tposition = index + 1;\n\t\t\t\t\tindex = path.indexOf(PATH_SEPARATOR, position);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n", "'use strict';\n\nmodule.exports = value => typeof value === 'object' && typeof value.next === 'function';\n", "'use strict';\n\nconst {TARGET} = require('./constants');\n\n// eslint-disable-next-line max-params\nmodule.exports = (iterator, target, thisArg, applyPath, prepareValue) => {\n\tconst originalNext = iterator.next;\n\n\tif (target.name === 'entries') {\n\t\titerator.next = function () {\n\t\t\tconst result = originalNext.call(this);\n\n\t\t\tif (result.done === false) {\n\t\t\t\tresult.value[0] = prepareValue(\n\t\t\t\t\tresult.value[0],\n\t\t\t\t\ttarget,\n\t\t\t\t\tresult.value[0],\n\t\t\t\t\tapplyPath\n\t\t\t\t);\n\t\t\t\tresult.value[1] = prepareValue(\n\t\t\t\t\tresult.value[1],\n\t\t\t\t\ttarget,\n\t\t\t\t\tresult.value[0],\n\t\t\t\t\tapplyPath\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t} else if (target.name === 'values') {\n\t\tconst keyIterator = thisArg[TARGET].keys();\n\n\t\titerator.next = function () {\n\t\t\tconst result = originalNext.call(this);\n\n\t\t\tif (result.done === false) {\n\t\t\t\tresult.value = prepareValue(\n\t\t\t\t\tresult.value,\n\t\t\t\t\ttarget,\n\t\t\t\t\tkeyIterator.next().value,\n\t\t\t\t\tapplyPath\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t} else {\n\t\titerator.next = function () {\n\t\t\tconst result = originalNext.call(this);\n\n\t\t\tif (result.done === false) {\n\t\t\t\tresult.value = prepareValue(\n\t\t\t\t\tresult.value,\n\t\t\t\t\ttarget,\n\t\t\t\t\tresult.value,\n\t\t\t\t\tapplyPath\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\treturn iterator;\n};\n", "'use strict';\n\nconst isSymbol = require('./is-symbol');\n\nmodule.exports = (cache, options, property) => {\n\treturn cache.isUnsubscribed ||\n\t\t(options.ignoreSymbols && isSymbol(property)) ||\n\t\t(options.ignoreUnderscores && property.charAt(0) === '_') ||\n\t\t('ignoreKeys' in options && options.ignoreKeys.includes(property));\n};\n", "'use strict';\n\nconst path = require('./path');\n\n/**\n * @class Cache\n * @private\n */\nclass Cache {\n\tconstructor(equals) {\n\t\tthis._equals = equals;\n\t\tthis._proxyCache = new WeakMap();\n\t\tthis._pathCache = new WeakMap();\n\t\tthis.isUnsubscribed = false;\n\t}\n\n\t_getDescriptorCache() {\n\t\tif (this._descriptorCache === undefined) {\n\t\t\tthis._descriptorCache = new WeakMap();\n\t\t}\n\n\t\treturn this._descriptorCache;\n\t}\n\n\t_getProperties(target) {\n\t\tconst descriptorCache = this._getDescriptorCache();\n\t\tlet properties = descriptorCache.get(target);\n\n\t\tif (properties === undefined) {\n\t\t\tproperties = {};\n\t\t\tdescriptorCache.set(target, properties);\n\t\t}\n\n\t\treturn properties;\n\t}\n\n\t_getOwnPropertyDescriptor(target, property) {\n\t\tif (this.isUnsubscribed) {\n\t\t\treturn Reflect.getOwnPropertyDescriptor(target, property);\n\t\t}\n\n\t\tconst properties = this._getProperties(target);\n\t\tlet descriptor = properties[property];\n\n\t\tif (descriptor === undefined) {\n\t\t\tdescriptor = Reflect.getOwnPropertyDescriptor(target, property);\n\t\t\tproperties[property] = descriptor;\n\t\t}\n\n\t\treturn descriptor;\n\t}\n\n\tgetProxy(target, path, handler, proxyTarget) {\n\t\tif (this.isUnsubscribed) {\n\t\t\treturn target;\n\t\t}\n\n\t\tthis._pathCache.set(target, path);\n\n\t\tlet proxy = this._proxyCache.get(target);\n\n\t\tif (proxy === undefined) {\n\t\t\tproxy = target[proxyTarget] === undefined ?\n\t\t\t\tnew Proxy(target, handler) :\n\t\t\t\ttarget;\n\n\t\t\tthis._proxyCache.set(target, proxy);\n\t\t}\n\n\t\treturn proxy;\n\t}\n\n\tgetPath(target) {\n\t\treturn this.isUnsubscribed ? undefined : this._pathCache.get(target);\n\t}\n\n\tisDetached(target, object) {\n\t\tpath.walk(this.getPath(target), key => {\n\t\t\tif (object) {\n\t\t\t\tobject = object[key];\n\t\t\t}\n\t\t});\n\n\t\treturn !Object.is(target, object);\n\t}\n\n\tdefineProperty(target, property, descriptor) {\n\t\tif (!Reflect.defineProperty(target, property, descriptor)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.isUnsubscribed) {\n\t\t\tthis._getProperties(target)[property] = descriptor;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetProperty(target, property, value, receiver, previous) { // eslint-disable-line max-params\n\t\tif (!this._equals(previous, value) || !(property in target)) {\n\t\t\tconst descriptor = this._getOwnPropertyDescriptor(target, property);\n\n\t\t\tif (descriptor !== undefined && 'set' in descriptor) {\n\t\t\t\treturn Reflect.set(target, property, value, receiver);\n\t\t\t}\n\n\t\t\treturn Reflect.set(target, property, value);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdeleteProperty(target, property, previous) {\n\t\tif (Reflect.deleteProperty(target, property)) {\n\t\t\tif (!this.isUnsubscribed) {\n\t\t\t\tconst properties = this._getDescriptorCache().get(target);\n\n\t\t\t\tif (properties) {\n\t\t\t\t\tdelete properties[property];\n\t\t\t\t\tthis._pathCache.delete(previous);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tisSameDescriptor(a, target, property) {\n\t\tconst b = this._getOwnPropertyDescriptor(target, property);\n\n\t\treturn a !== undefined &&\n\t\t\tb !== undefined &&\n\t\t\tObject.is(a.value, b.value) &&\n\t\t\t(a.writable || false) === (b.writable || false) &&\n\t\t\t(a.enumerable || false) === (b.enumerable || false) &&\n\t\t\t(a.configurable || false) === (b.configurable || false) &&\n\t\t\ta.get === b.get &&\n\t\t\ta.set === b.set;\n\t}\n\n\tisGetInvariant(target, property) {\n\t\tconst descriptor = this._getOwnPropertyDescriptor(target, property);\n\n\t\treturn descriptor !== undefined &&\n\t\t\tdescriptor.configurable !== true &&\n\t\t\tdescriptor.writable !== true;\n\t}\n\n\tunsubscribe() {\n\t\tthis._descriptorCache = null;\n\t\tthis._pathCache = null;\n\t\tthis._proxyCache = null;\n\t\tthis.isUnsubscribed = true;\n\t}\n}\n\nmodule.exports = Cache;\n", "'use strict';\n\nmodule.exports = value => toString.call(value) === '[object Object]';\n", "'use strict';\n\nconst path = require('./path');\nconst isArray = require('./is-array');\nconst isBuiltin = require('./is-builtin');\nconst isObject = require('./is-object');\n\nconst certainChange = () => true;\n\nconst shallowEqualArrays = (clone, value) => {\n\treturn clone.length !== value.length || clone.some((item, index) => value[index] !== item);\n};\n\nconst shallowEqualSets = (clone, value) => {\n\tif (clone.size !== value.size) {\n\t\treturn true;\n\t}\n\n\tfor (const element of clone) {\n\t\tif (!value.has(element)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nconst shallowEqualMaps = (clone, value) => {\n\tif (clone.size !== value.size) {\n\t\treturn true;\n\t}\n\n\tlet bValue;\n\tfor (const [key, aValue] of clone) {\n\t\tbValue = value.get(key);\n\n\t\tif (bValue !== aValue || (bValue === undefined && !value.has(key))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nconst IMMUTABLE_OBJECT_METHODS = new Set([\n\t'hasOwnProperty',\n\t'isPrototypeOf',\n\t'propertyIsEnumerable',\n\t'toLocaleString',\n\t'toString',\n\t'valueOf'\n]);\n\nconst IMMUTABLE_ARRAY_METHODS = new Set([\n\t'concat',\n\t'includes',\n\t'indexOf',\n\t'join',\n\t'keys',\n\t'lastIndexOf'\n]);\n\nconst IMMUTABLE_SET_METHODS = new Set([\n\t'has',\n\t'toString'\n]);\n\nconst IMMUTABLE_MAP_METHODS = new Set([...IMMUTABLE_SET_METHODS].concat(['get']));\n\nconst SHALLOW_MUTABLE_ARRAY_METHODS = {\n\tpush: certainChange,\n\tpop: certainChange,\n\tshift: certainChange,\n\tunshift: certainChange,\n\tcopyWithin: shallowEqualArrays,\n\treverse: shallowEqualArrays,\n\tsort: shallowEqualArrays,\n\tsplice: shallowEqualArrays,\n\tflat: shallowEqualArrays,\n\tfill: shallowEqualArrays\n};\n\nconst SHALLOW_MUTABLE_SET_METHODS = {\n\tadd: shallowEqualSets,\n\tclear: shallowEqualSets,\n\tdelete: shallowEqualSets\n};\n\nconst COLLECTION_ITERATOR_METHODS = [\n\t'keys',\n\t'values',\n\t'entries'\n];\n\nconst SHALLOW_MUTABLE_MAP_METHODS = {\n\tset: shallowEqualMaps,\n\tclear: shallowEqualMaps,\n\tdelete: shallowEqualMaps\n};\n\nconst HANDLED_ARRAY_METHODS = new Set([...IMMUTABLE_OBJECT_METHODS]\n\t.concat([...IMMUTABLE_ARRAY_METHODS])\n\t.concat(Object.keys(SHALLOW_MUTABLE_ARRAY_METHODS)));\n\nconst HANDLED_SET_METHODS = new Set([...IMMUTABLE_SET_METHODS]\n\t.concat(Object.keys(SHALLOW_MUTABLE_SET_METHODS))\n\t.concat(COLLECTION_ITERATOR_METHODS));\n\nconst HANDLED_MAP_METHODS = new Set([...IMMUTABLE_MAP_METHODS]\n\t.concat(Object.keys(SHALLOW_MUTABLE_MAP_METHODS))\n\t.concat(COLLECTION_ITERATOR_METHODS));\n\nclass Clone {\n\tconstructor(value, path, argumentsList) {\n\t\tthis._path = path;\n\t\tthis._isChanged = false;\n\t\tthis._clonedCache = new Set();\n\n\t\tif (value instanceof WeakSet) {\n\t\t\tthis._weakValue = value.has(argumentsList[0]);\n\t\t} else if (value instanceof WeakMap) {\n\t\t\tthis._weakValue = value.get(argumentsList[0]);\n\t\t} else {\n\t\t\tthis.clone = path === undefined ? value : this._shallowClone(value);\n\t\t}\n\t}\n\n\t_shallowClone(value) {\n\t\tlet clone;\n\n\t\tif (isObject(value)) {\n\t\t\tclone = {...value};\n\t\t} else if (isArray(value)) {\n\t\t\tclone = [...value];\n\t\t} else if (value instanceof Date) {\n\t\t\tclone = new Date(value);\n\t\t} else if (value instanceof Set) {\n\t\t\tclone = new Set(value);\n\t\t} else if (value instanceof Map) {\n\t\t\tclone = new Map(value);\n\t\t}\n\n\t\tthis._clonedCache.add(clone);\n\n\t\treturn clone;\n\t}\n\n\tpreferredThisArg(target, thisArg, thisProxyTarget) {\n\t\tconst {name} = target;\n\n\t\tif (SmartClone.isHandledMethod(thisProxyTarget, name)) {\n\t\t\tif (isArray(thisProxyTarget)) {\n\t\t\t\tthis._onIsChanged = SHALLOW_MUTABLE_ARRAY_METHODS[name];\n\t\t\t} else if (thisProxyTarget instanceof Set) {\n\t\t\t\tthis._onIsChanged = SHALLOW_MUTABLE_SET_METHODS[name];\n\t\t\t} else if (thisProxyTarget instanceof Map) {\n\t\t\t\tthis._onIsChanged = SHALLOW_MUTABLE_MAP_METHODS[name];\n\t\t\t}\n\n\t\t\treturn thisProxyTarget;\n\t\t}\n\n\t\treturn thisArg;\n\t}\n\n\tupdate(fullPath, property, value) {\n\t\tif (value !== undefined && property !== 'length') {\n\t\t\tlet object = this.clone;\n\n\t\t\tpath.walk(path.after(fullPath, this._path), key => {\n\t\t\t\tif (!this._clonedCache.has(object[key])) {\n\t\t\t\t\tobject[key] = this._shallowClone(object[key]);\n\t\t\t\t}\n\n\t\t\t\tobject = object[key];\n\t\t\t});\n\n\t\t\tobject[property] = value;\n\t\t}\n\n\t\tthis._isChanged = true;\n\t}\n\n\tisChanged(value, equals, argumentsList) {\n\t\tif (value instanceof Date) {\n\t\t\treturn !equals(this.clone.valueOf(), value.valueOf());\n\t\t}\n\n\t\tif (value instanceof WeakSet) {\n\t\t\treturn this._weakValue !== value.has(argumentsList[0]);\n\t\t}\n\n\t\tif (value instanceof WeakMap) {\n\t\t\treturn this._weakValue !== value.get(argumentsList[0]);\n\t\t}\n\n\t\treturn this._onIsChanged === undefined ?\n\t\t\tthis._isChanged :\n\t\t\tthis._onIsChanged(this.clone, value);\n\t}\n}\n\nclass SmartClone {\n\tconstructor() {\n\t\tthis.stack = [];\n\t}\n\n\tstatic isHandledType(value) {\n\t\treturn isObject(value) ||\n\t\t\tisArray(value) ||\n\t\t\tisBuiltin.withMutableMethods(value);\n\t}\n\n\tstatic isHandledMethod(target, name) {\n\t\tif (isObject(target)) {\n\t\t\treturn IMMUTABLE_OBJECT_METHODS.has(name);\n\t\t}\n\n\t\tif (isArray(target)) {\n\t\t\treturn HANDLED_ARRAY_METHODS.has(name);\n\t\t}\n\n\t\tif (target instanceof Set) {\n\t\t\treturn HANDLED_SET_METHODS.has(name);\n\t\t}\n\n\t\tif (target instanceof Map) {\n\t\t\treturn HANDLED_MAP_METHODS.has(name);\n\t\t}\n\n\t\treturn isBuiltin.withMutableMethods(target);\n\t}\n\n\tget isCloning() {\n\t\treturn this.stack.length !== 0;\n\t}\n\n\tstart(value, path, argumentsList) {\n\t\tthis.stack.push(new Clone(value, path, argumentsList));\n\t}\n\n\tupdate(fullPath, property, value) {\n\t\tthis.stack[this.stack.length - 1].update(fullPath, property, value);\n\t}\n\n\tpreferredThisArg(target, thisArg, thisProxyTarget) {\n\t\treturn this.stack[this.stack.length - 1].preferredThisArg(target, thisArg, thisProxyTarget);\n\t}\n\n\tisChanged(isMutable, value, equals, argumentsList) {\n\t\treturn this.stack[this.stack.length - 1].isChanged(isMutable, value, equals, argumentsList);\n\t}\n\n\tstop() {\n\t\treturn this.stack.pop().clone;\n\t}\n}\n\nmodule.exports = SmartClone;\n", "'use strict';\n\nconst {TARGET, UNSUBSCRIBE} = require('./lib/constants');\nconst isBuiltin = require('./lib/is-builtin');\nconst path = require('./lib/path');\nconst isSymbol = require('./lib/is-symbol');\nconst isIterator = require('./lib/is-iterator');\nconst wrapIterator = require('./lib/wrap-iterator');\nconst ignoreProperty = require('./lib/ignore-property');\nconst Cache = require('./lib/cache');\nconst SmartClone = require('./lib/smart-clone');\n\nconst defaultOptions = {\n\tequals: Object.is,\n\tisShallow: false,\n\tpathAsArray: false,\n\tignoreSymbols: false,\n\tignoreUnderscores: false,\n\tignoreDetached: false\n};\n\nconst onChange = (object, onChange, options = {}) => {\n\toptions = {\n\t\t...defaultOptions,\n\t\t...options\n\t};\n\tconst proxyTarget = Symbol('ProxyTarget');\n\tconst {equals, isShallow, ignoreDetached} = options;\n\tconst cache = new Cache(equals);\n\tconst smartClone = new SmartClone();\n\n\tconst handleChangeOnTarget = (target, property, previous, value) => {\n\t\tif (\n\t\t\t!ignoreProperty(cache, options, property) &&\n\t\t\t!(ignoreDetached && cache.isDetached(target, object))\n\t\t) {\n\t\t\thandleChange(cache.getPath(target), property, previous, value);\n\t\t}\n\t};\n\n\t// eslint-disable-next-line max-params\n\tconst handleChange = (changePath, property, previous, value, name) => {\n\t\tif (smartClone.isCloning) {\n\t\t\tsmartClone.update(changePath, property, previous);\n\t\t} else {\n\t\t\tonChange(path.concat(changePath, property), value, previous, name);\n\t\t}\n\t};\n\n\tconst getProxyTarget = value => {\n\t\tif (value) {\n\t\t\treturn value[proxyTarget] || value;\n\t\t}\n\n\t\treturn value;\n\t};\n\n\tconst prepareValue = (value, target, property, basePath) => {\n\t\tif (\n\t\t\tisBuiltin.withoutMutableMethods(value) ||\n\t\t\tproperty === 'constructor' ||\n\t\t\t(isShallow && !SmartClone.isHandledMethod(target, property)) ||\n\t\t\tignoreProperty(cache, options, property) ||\n\t\t\tcache.isGetInvariant(target, property) ||\n\t\t\t(ignoreDetached && cache.isDetached(target, object))\n\t\t) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (basePath === undefined) {\n\t\t\tbasePath = cache.getPath(target);\n\t\t}\n\n\t\treturn cache.getProxy(value, path.concat(basePath, property), handler, proxyTarget);\n\t};\n\n\tconst handler = {\n\t\tget(target, property, receiver) {\n\t\t\tif (isSymbol(property)) {\n\t\t\t\tif (property === proxyTarget || property === TARGET) {\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tproperty === UNSUBSCRIBE &&\n\t\t\t\t\t!cache.isUnsubscribed &&\n\t\t\t\t\tcache.getPath(target).length === 0\n\t\t\t\t) {\n\t\t\t\t\tcache.unsubscribe();\n\t\t\t\t\treturn target;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst value = isBuiltin.withMutableMethods(target) ?\n\t\t\t\tReflect.get(target, property) :\n\t\t\t\tReflect.get(target, property, receiver);\n\n\t\t\treturn prepareValue(value, target, property);\n\t\t},\n\n\t\tset(target, property, value, receiver) {\n\t\t\tvalue = getProxyTarget(value);\n\n\t\t\tconst reflectTarget = target[proxyTarget] || target;\n\t\t\tconst previous = reflectTarget[property];\n\t\t\tconst hasProperty = property in target;\n\n\t\t\tif (cache.setProperty(reflectTarget, property, value, receiver, previous)) {\n\t\t\t\tif (!equals(previous, value) || !hasProperty) {\n\t\t\t\t\thandleChangeOnTarget(target, property, previous, value);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\tdefineProperty(target, property, descriptor) {\n\t\t\tif (!cache.isSameDescriptor(descriptor, target, property)) {\n\t\t\t\tif (!cache.defineProperty(target, property, descriptor)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\thandleChangeOnTarget(target, property, undefined, descriptor.value);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, property) {\n\t\t\tif (!Reflect.has(target, property)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst previous = Reflect.get(target, property);\n\n\t\t\tif (cache.deleteProperty(target, property, previous)) {\n\t\t\t\thandleChangeOnTarget(target, property, previous);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\tapply(target, thisArg, argumentsList) {\n\t\t\tconst thisProxyTarget = thisArg[proxyTarget] || thisArg;\n\n\t\t\tif (cache.isUnsubscribed) {\n\t\t\t\treturn Reflect.apply(target, thisProxyTarget, argumentsList);\n\t\t\t}\n\n\t\t\tif (SmartClone.isHandledType(thisProxyTarget)) {\n\t\t\t\tconst applyPath = path.initial(cache.getPath(target));\n\t\t\t\tconst isHandledMethod = SmartClone.isHandledMethod(thisProxyTarget, target.name);\n\n\t\t\t\tsmartClone.start(thisProxyTarget, applyPath, argumentsList);\n\n\t\t\t\tconst result = Reflect.apply(\n\t\t\t\t\ttarget,\n\t\t\t\t\tsmartClone.preferredThisArg(target, thisArg, thisProxyTarget),\n\t\t\t\t\tisHandledMethod ?\n\t\t\t\t\t\targumentsList.map(argument => getProxyTarget(argument)) :\n\t\t\t\t\t\targumentsList\n\t\t\t\t);\n\n\t\t\t\tconst isChanged = smartClone.isChanged(thisProxyTarget, equals, argumentsList);\n\t\t\t\tconst clone = smartClone.stop();\n\n\t\t\t\tif (isChanged) {\n\t\t\t\t\tif (smartClone.isCloning) {\n\t\t\t\t\t\thandleChange(path.initial(applyPath), path.last(applyPath), clone, thisProxyTarget, target.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleChange(applyPath, '', clone, thisProxyTarget, target.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(thisArg instanceof Map || thisArg instanceof Set) &&\n\t\t\t\t\tisIterator(result)\n\t\t\t\t) {\n\t\t\t\t\treturn wrapIterator(result, target, thisArg, applyPath, prepareValue);\n\t\t\t\t}\n\n\t\t\t\treturn (SmartClone.isHandledType(result) && isHandledMethod) ?\n\t\t\t\t\tcache.getProxy(result, applyPath, handler, proxyTarget) :\n\t\t\t\t\tresult;\n\t\t\t}\n\n\t\t\treturn Reflect.apply(target, thisArg, argumentsList);\n\t\t}\n\t};\n\n\tconst proxy = cache.getProxy(object, options.pathAsArray ? [] : '', handler);\n\tonChange = onChange.bind(proxy);\n\n\treturn proxy;\n};\n\nonChange.target = proxy => proxy[TARGET] || proxy;\nonChange.unsubscribe = proxy => proxy[UNSUBSCRIBE] || proxy;\n\nmodule.exports = onChange;\n"],
  "mappings": "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",
  "names": ["path", "path", "onChange"]
}
